@page "/register"
@using System.Web
@using Frontend.Models
@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@inject IAntiforgery AntiForgery
@inject IHttpContextAccessor HttpContextAccessor

<h3 class="text-center mb-4 register-text" >Create an Account</h3>

<div class="container text-light my-5">
    <div class="row justify-content-center gap-5">
        <div class="col-md-5" style="background-color: #444444; padding: 2rem; border: 1px solid #5e5e5e; border-radius: 2%;">

            <form method="post" action="/frontend/auth/register">
                <input name="__RequestVerificationToken" type="hidden" value="@RequestToken" />

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                <div class="text-danger text-center mb-3">@ErrorMessage</div>
                }

                <div class="form-group mb-3">
                    <label for="email" class="form-label generic-text generic-text-size">Email</label>
                    <input type="email" id="email" name="Email"
                           class="form-control bg-dark text-light border-secondary"
                           value="@_registerModel.Email"
                           @onchange="@(e => _registerModel.Email = e.Value?.ToString() ?? string.Empty)"
                           required />
                </div>

                <div class="form-group mb-3">
                    <label for="password" class="form-label generic-text generic-text-size">Password</label>
                    <input type="password" id="password" name="Password"
                           class="form-control bg-dark text-light border-secondary"
                           value="@_registerModel.Password"
                           @onchange="@(e => _registerModel.Password = e.Value?.ToString() ?? string.Empty)"
                           required minlength="6" />
                </div>

                <div class="form-group mb-4">
                    <label for="confirmPassword" class="form-label generic-text generic-text-size">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="ConfirmPassword"
                           class="form-control bg-dark text-light border-secondary"
                           value="@_registerModel.ConfirmPassword"
                           @onchange="@(e => _registerModel.ConfirmPassword = e.Value?.ToString() ?? string.Empty)"
                           required />
                </div>

                <div class="form-group text-center">
                    <button type="submit" class="btn btn-secondary px-4 generic-text generic-text-size" style="background-color: #bf1f1f; border-color: #DA0037;">
                        Register
                    </button>
                </div>

                <div class="mt-3 text-center">
                    <p>Already have an account? <a href="/login" class="text-info generic-text generic-text-size">Login here</a></p>
                </div>
            </form>

        </div>
    </div>
</div>

@code {

    private readonly RegisterUserDto _registerModel = new()
    {
        Email = null,
        Password = null,
        Role = "user"
    };
    private string? ErrorMessage { get; set; }
    private string? RequestToken { get; set; }

    protected override void OnInitialized()
    {
        if (HttpContextAccessor.HttpContext != null)
        {
            var tokens = AntiForgery.GetAndStoreTokens(HttpContextAccessor.HttpContext);
            RequestToken = tokens.RequestToken;
        }

        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("error", out var errorValue))
        {
            ErrorMessage = HttpUtility.UrlDecode(errorValue);
        }
    }

} 