@page "/login"
@using Frontend.Models
@using Frontend.Services
@using Frontend.Services.Interfaces
@inject NavigationManager NavigationManager
@inject ICartService CartService
@inject ILocalCartStorageService LocalCartStorageService
@inject IFirebaseAuthService FirebaseAuthService

<h3 class="text-center mb-4 medium-title">Login</h3>

<div class="container text-light my-5">
    <div class="row justify-content-center gap-5">
        <div class="col-md-5 bg-transparent" style="background-color: #444444; padding: 2rem; border: 1px solid #5e5e5e; border-radius: 2%;">

            <EditForm Model="@LoginUser" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator/>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="text-danger text-center mb-3">
                        @ErrorMessage
                    </div>
                }

                <div class="form-group mb-3">
                    <label for="email" class="form-label generic-text" style="font-size: 1rem">Email</label>
                    <InputText type="email" id="email" name="Email"
                    class="form-control text-light border-secondary"
                    @bind-Value="@LoginUser.Email"
                    required/>
                    <ValidationMessage For="@(() => LoginUser.Email)" />
                </div>

                <div class="form-group mb-4">
                    <label for="password" class="form-label generic-text" style="font-size: 1rem">Password</label>
                    <InputText type="password" id="password" name="Password"
                    class="form-control text-light border-secondary"
                    @bind-Value="@LoginUser.Password"
                    required/>
                    <ValidationMessage For="@(() => LoginUser.Password)" />
                </div>

                <div class="form-group text-center">
                    <button type="submit" class="arcade-btn">
                        Login
                    </button>
                </div>

                <div class="mt-3 text-center ">
                    <p>Don't have an account? <a href="/register" id="424" class="text-info generic-text-size generic-text">Register here</a></p>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    private LoginUserDto LoginUser { get; set; } = new()
    {
        Email = null,
        Password = null
    };

    private string ErrorMessage { get; set; }

    private async Task HandleLogin()
    {

        try
        {
            var token = await FirebaseAuthService.LoginUser(LoginUser.Email, LoginUser.Password);

            if (!string.IsNullOrEmpty(token))
            {
                try
                {
                    await AssignUserCart();
                }
                catch
                {
                    //no cart found
                }
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                ErrorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Invalid email or password.";
        }
    }

    private async Task AssignUserCart()
    {
        var userId = await FirebaseAuthService.GetUserId();
        if (userId == null) { return; }

        try
        {
            var cart = await CartService.GetCartByUserIdAsync(userId);

            if (cart == null)
            {
                return;
            }
            else
            {
                foreach (var product in cart.cartItems)
                {
                    for (int i = 0; i < product.Value; i++)
                    {
                        await LocalCartStorageService.AddToCartByProductId(product.Key);
                    }
                }
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}