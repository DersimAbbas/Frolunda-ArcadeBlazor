@page "/register"
@using Frontend.Models
@using Frontend.Services
@using Frontend.Services.Interfaces
@inject NavigationManager NavigationManager
@inject IFirebaseAuthService FirebaseAuthService

<h3 class="text-center mb-4 register-text" >Create an Account</h3>

<div class="container text-light my-5">
    <div class="row justify-content-center gap-5">
        <div class="col-md-5" style="background-color: #444444; padding: 2rem; border: 1px solid #5e5e5e; border-radius: 2%;">

            <EditForm Model="@RegisterUser" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator/>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="text-danger text-center mb-3">@ErrorMessage</div>
                }

                <div class="form-group mb-3">
                    <label for="email" class="form-label generic-text generic-text-size">Email</label>
                    <InputText type="email" id="email" name="Email"
                               class="form-control bg-dark text-light border-secondary"
                               @bind-Value="@RegisterUser.Email"
                               required />
                    <ValidationMessage For="@(() => RegisterUser.Email)" />
                </div>

                <div class="form-group mb-3">
                    <label for="password" class="form-label generic-text generic-text-size">Password</label>
                    <InputText type="password" id="password" name="Password"
                           class="form-control bg-dark text-light border-secondary"
                           @bind-Value="@RegisterUser.Password"
                           required minlength="6" />
                    <ValidationMessage For="@(() => RegisterUser.Password)" />
                </div>

                <div class="form-group mb-4">
                    <label for="confirmPassword" class="form-label generic-text generic-text-size">Confirm Password</label>
                    <InputText type="password" id="confirmPassword" name="ConfirmPassword"
                               class="form-control bg-dark text-light border-secondary"
                               @bind-Value="@RegisterUser.ConfirmPassword"
                               required />
                    <ValidationMessage For="@(() => RegisterUser.ConfirmPassword)" />
                </div>

                <div class="form-group text-center">
                    <button type="submit" class="btn btn-secondary px-4 generic-text generic-text-size" style="background-color: #bf1f1f; border-color: #DA0037;">
                        Register
                    </button>
                </div>

                <div class="mt-3 text-center">
                    <p>Already have an account? <a href="/login"id="10" class="text-info generic-text generic-text-size">Login here</a></p>
                </div>
           </EditForm>

        </div>
    </div>
</div>

@code {

    private RegisterUserDto RegisterUser { get; set; } = new()
    {
        Email = null,
        Password = null,
        Role = "user"
    };
    private string? ErrorMessage { get; set; }

    private async void HandleRegistration()
    {
       try
       {
           var token = await FirebaseAuthService.RegisterUser(RegisterUser.Email, RegisterUser.Password);

           if (!string.IsNullOrEmpty(token))
           {
               NavigationManager.NavigateTo("/login", forceLoad: true);
           }
           else
           {
               ErrorMessage = "Invalid email or passwords.";
           }
       }
       catch (Exception ex)
       {
           ErrorMessage = "Invalid email or passwords.";
       }
    }
   
} 