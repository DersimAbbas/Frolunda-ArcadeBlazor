@using Frontend.Services
@using Frontend.Components.Store.Components
@using Frontend.Services.Interfaces
@inject ILocalCartStorageService LocalCartStorageService

<div class="header d-flex align-items-center px-3">
    <a href="" class="header-logo me-3">
        <img src="images/logo.png" alt="Logo" />
    </a>

    <div class="header-title flex-grow-1">
        Frölunda Arcade
    </div>

    <div class="cart-button-wrapper position-relative">
        <button id="cartToggleButton" class="arcade-cart-btn" @onclick="ToggleCart" aria-label="Shopping Cart">
            <i class="bi bi-cart-fill"></i>
            CART
            @if (_cartItemCount > 0)
            {
            <span class="arcade-cart-badge">
                @_cartItemCount
            </span>
            }
        </button>
        <ShoppingCart Visible="_isCartOpen" OnClose="ToggleCart" />
    </div>
</div>

<link rel="stylesheet" href="css/HeaderStyle.css" />

@code {
    private bool _isCartOpen = false;
    private int _cartItemCount;

    protected override void OnInitialized()
    {
        LocalCartStorageService.OnChange += UpdateCartCount;
        UpdateCartCount();
    }

    private void UpdateCartCount()
    {
        _cartItemCount = LocalCartStorageService.GetCartItemCount();
        StateHasChanged();
    }

    public void Dispose()
    {
        LocalCartStorageService.OnChange -= UpdateCartCount;
    }

    private void ToggleCart()
    {
        _isCartOpen = !_isCartOpen;
    }
}