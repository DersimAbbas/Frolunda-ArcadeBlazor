@using Frontend.Services.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject IOrderService OrderService

<div class="modal fade @(IsVisible ? "show" : "")" style="display: @(IsVisible ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Contact Support</h5>
                <button type="button" class="btn-close" @onclick="Hide"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@SupportRequest" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="mb-3">
                        <label for="name" class="form-label">Name</label>
                        <InputText id="name" class="form-control" @bind-Value="SupportRequest.Name" />
                        <ValidationMessage For="@(() => SupportRequest.Name)" />
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <InputText id="email" class="form-control" @bind-Value="SupportRequest.Email" />
                        <ValidationMessage For="@(() => SupportRequest.Email)" />
                    </div>
                    <div class="mb-3">
                        <label for="orderId" class="form-label">Order ID</label>
                        <InputText id="orderId" class="form-control" @bind-Value="SupportRequest.OrderId" />
                        <ValidationMessage For="@(() => SupportRequest.OrderId)" />
                    </div>
                    <div class="text-end">
                        <button type="button" class="btn btn-secondary me-2" @onclick="Hide">Cancel</button>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    public bool IsVisible { get; private set; }
    public SupportRequestModel SupportRequest { get; set; } = new();

    public void Show()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        IsVisible = false;
        SupportRequest = new();
        StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        await OrderService.DisputeOrder(SupportRequest.Email, SupportRequest.Name, SupportRequest.OrderId);
        Hide();
    }


    public class SupportRequestModel
    {
        [Required(ErrorMessage = "Name is required")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Please enter a valid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Order ID is required")]
        public string OrderId { get; set; }
    }
}