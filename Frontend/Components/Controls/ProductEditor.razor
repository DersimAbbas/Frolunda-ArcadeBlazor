@using Frontend.Models

@if (Products == null || Products.Count == 0)
{
    <div class="text-center">
        <img src="images/no-results.png" alt="No products found" style="max-height: 300px;" />
        <p class="text-muted">No products match the current filters.</p>
    </div>
}
else
{
    <table class="table table-bordered align-middle text-light">
        <thead>
            <tr>
                <th>Img</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Genre</th>
                <th>Status</th>
                <th>Age Rating</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td class="text-center">
                        <button class="btn btn-sm btn-secondary mb-1" @onclick="() => ToggleImage(product.Id)">
                            @(ExpandedRows.Contains(product.Id) ? "▲" : "▼")
                        </button>
                        @if (ExpandedRows.Contains(product.Id))
                        {
                            <div class="mt-2">
                                <img src="@product.ImageLink" width="60" height="60" class="img-thumbnail" />
                                <input class="form-control mt-1" @bind="product.ImageLink" />
                            </div>
                        }
                    </td>
                    <td><input class="form-control" @bind="product.Name" /></td>
                    <td><input class="form-control" @bind="product.Description" /></td>
                    <td><input type="number" step="0.01" class="form-control" @bind="product.Price" /></td>
                    <td><input class="form-control" @bind="product.Genre" /></td>
                    <td><input class="form-control" @bind="product.Status" /></td>
                    <td><input type="number" class="form-control" @bind="product.AgeRating" /></td>
                    <td>
                        <button class="btn btn-success btn-sm me-1" @onclick="() => HandleUpdate(product)">Update</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => HandleDelete(product.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter] public List<Product> Products { get; set; } = new();
    [Parameter] public EventCallback<Product> OnUpdate { get; set; }
    [Parameter] public EventCallback<string> OnDelete { get; set; }

    private HashSet<string> ExpandedRows = new();

    private void ToggleImage(string id)
    {
        if (!ExpandedRows.Add(id))
        {
            ExpandedRows.Remove(id);
        }
    }

    private async Task HandleUpdate(Product product)
    {
        if (OnUpdate.HasDelegate)
        {
            await OnUpdate.InvokeAsync(product);
        }
    }
    private async Task HandleDelete(string id)
    {
        if (OnDelete.HasDelegate)
        {
            await OnDelete.InvokeAsync(id);
        }
    }
}