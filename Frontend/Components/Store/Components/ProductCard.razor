@using Frontend.Models
@using MudBlazor
@inject NavigationManager NavigationManager

<div class="card rounded-0 p-3 bg-transparent" id="@SelectedProduct.Id" >
    <div class="d-flex justify-content-between align-items-center gap-3 text-light">
        <div class="flex-grow-1">
            <h5 class="card-title fw-bold mb-1">@SelectedProduct.Name</h5>
            <p class="card-text mb-2">@SelectedProduct.Description</p>
            @* <button id="@(SelectedProduct.Id + "-buy")" type="button" class="simple-arcade-btn" style="background-color: limegreen">Buy</button> *@
            <button id="@(SelectedProduct.Id + "-ShowPage")" type="button" class="simple-arcade-btn" style="background-color: crimson" @onclick="NavigateToProductPage">View Product</button>
        </div>
            <MudRating SelectedValue="@GetAvgRating()" ReadOnly="true" Class="justify-content-sm-center" />
        <div class="text-nowrap text-end">
            <p class="ProductCardPrice fw-semibold  mb-0" style="font-size: 1.1rem; margin-right:70px;">@SelectedProduct.Price</p>
        </div>
        <div class="flex-shrink-0">
            <img id="@(SelectedProduct.Id + "-product-img")"
                 src="@SelectedProduct.ImageLink"
                 style="width: 80px; height: 80px; object-fit: cover; border-radius: 0;" 
                 alt="product-img"/>
        </div>
    </div>
</div>

@code {
    [Parameter] public Product SelectedProduct { get; set; }


    private void NavigateToProductPage()
    {
        Console.WriteLine($"Navigating to product page for {SelectedProduct.Name}");
        NavigationManager.NavigateTo($"/product-page/{SelectedProduct.Name}");
    }

    private int GetAvgRating()
    {
        var avgRating = 0.0;
        var reviewCount = SelectedProduct.Reviews.Count != 0 ? SelectedProduct.Reviews.Count : 1; 
        foreach (var review in SelectedProduct.Reviews)
        {
            avgRating += review.Ratings;
        }

        return (int)Math.Round(avgRating / reviewCount);
    }
}